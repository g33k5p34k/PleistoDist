import os
import numpy
#import arcpy
import pandas
from getintervals import getintervals
#from makerasters import makerasters
os.chdir(os.path.dirname(os.path.abspath(__file__)))
path = os.getcwd()
inputpath = path+"/input/"

#read sea level file (from Bintanja et al, 2008)
sealvl = pandas.read_csv('input/sealvl.csv')
#print(sealvl)

#input checking subroutine for time value
while True:
    try:
        #Prompt user for time cutoff input value
        time = float(raw_input("Please enter a cutoff time (kya) [0.1 to 3000, in intervals of 0.1] "))
        if 0.1 <= time <= 3000:
            break #break out of while loop if input is within accepted time range
        else:
            raise ValueError #raise exception if input is not valid
    except ValueError:
        print("Please enter a valid cutoff time") #prompt user to re-enter input, loop back to start of input checking

#input checking subroutine for interval value
while True:
    try:
        #prompt user for number of intervals
        intervals = int(raw_input("Enter the number of intervals [integer, from 1 to " + str(int(time*10))+"]: "))
        if 1 <= intervals <= (time*10): #check to see if interval value is within valid range
            break #if valid, break out of checking subroutine
        else:
            raise ValueError
    except ValueError:
        print("Please enter a valid interval value")

while True:
    try:
        #prompt user for input bathymetry raster
        inputraster = raw_input("Please enter the file name of the input bathymetry raster (in .asc format) ")
        if (inputraster in os.listdir(inputpath)) & (inputraster.endswith(".asc")): #check list of files with .asc extension in input folder
            break #if user input matches file in input folder, break out of input checking subroutine
        else:
            raise ValueError
    except ValueError:
        print("Please enter a valid .asc file")

while True:
    try:
        #prompt user to select analysis mode
        mode = int(raw_input("Choose analysis mode [1: Individual mode, 0: Island mode] "))
        if mode in [0,1]:
            break
        else:
            raise ValueError
    except ValueError:
        print("Please enter a valid number (0 or 1) to choose the analysis mode ")

while True:
    try:
        #prompt user for point shapefile input
        points = raw_input("Enter the filename of the shapefile containing input soutce points ")
        if (points in os.listdir(inputpath)) & (points.endswith(".shp")):
            break
        else:
            raise ValueError
    except ValueError:
        print("Please enter a valid .shp file ")

#calculate interval values and time interval counts
getintervals(sealvl,time,intervals)
#import interval file generated by getintervals subroutine
intervalfile = pandas.read_csv(r'output/intervals.csv')
#run subroutine to generate sea level rasters for each interval
makerasters(intervalfile,inputraster)
#run subroutine based on analysis mode choice
#if mode == 0:
#    islandmode(intervalfile,points)
#elif mode == 1:
#    individualmode(intervalfile,points)
