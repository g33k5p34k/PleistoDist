import os
import numpy
import arcpy
import pandas
from getintervals import getintervals_time
from getintervals_sealvl import getintervals_sealvl
from makerasters import makerasters
os.chdir(os.path.dirname(os.path.abspath(__file__)))

#set current directory as path variable
path = os.getcwd()
#set current workspace
arcpy.env.workspace = path
arcpy.env.overwriteOutput = True

#read sea level file (from Bintanja et al, 2008)
sealvl = pandas.read_csv('../ToolData/sealvl.csv')
#print(sealvl)

#setupoutput folder
outpath = arcpy.GetParameterAsText(0)
os.mkdir(outpath)
shapepath = outpath+r'\shapefile'
rasterpath = outpath+r'\raster'
#setup folder structure in output folder
if not os.path.exists(shapepath):
    os.mkdir(shapepath)
if not os.path.exists(rasterpath):
    os.mkdir(rasterpath)

#define inputs
time = float(arcpy.GetParameterAsText(1))
intervals = int(arcpy.GetParameterAsText(2))
binningmethod = arcpy.GetParameterAsText(3)
inputraster = arcpy.GetParameterAsText(4)
epsg = int(arcpy.GetParameterAsText(5))

#input checking subroutines
if intervals > (time * 10):
    arcpy.AddError("The Interval value is too high!")
    raise arcpy.ExecuteError

#calculate interval values and time interval counts
if binningmethod =="Time":
    getintervals_time(sealvl,time,intervals,outpath)
else:
    getintervals_sealvl(sealvl,time,intervals,outpath)
#import interval file generated by getintervals subroutine
intervalfile = pandas.read_csv(outpath+'/intervals.csv')
#run subroutine to generate sea level rasters for each interval
makerasters(intervalfile,inputraster,epsg,outpath)